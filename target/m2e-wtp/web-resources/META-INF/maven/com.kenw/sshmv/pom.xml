<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.kenw</groupId>
  <artifactId>sshmv</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>sshmv Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.version>4.1.1.RELEASE</spring.version>
    <struts2.version>2.3.16.3</struts2.version>
    <hibernate.version>4.3.6.Final</hibernate.version>
  </properties>
      
  <dependencies>
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  
      <!-- Spring Begin -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
          <version>${spring.version}</version>
      </dependency>
      
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-expression</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
          this if you use Spring Bean APIs (org.springframework.beans.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
          spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
          <version>${spring.version}</version>
      </dependency>
      
      <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
          spring-beans) This is the central artifact for Spring's Dependency Injection 
          Container and is generally always defined -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Various Application Context utilities, including EhCache, JavaMail, 
          Quartz, and Freemarker integration Define this if you need any of these integrations -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
          spring-aop, spring-context) Define this if you use Spring Transactions or 
          DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${spring.version}</version>
      </dependency>
      
      <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
          spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
          and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
          Define this if you need ORM (org.springframework.orm.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
          JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
          spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-oxm</artifactId>
          <version>${spring.version}</version>
      </dependency>
      
      <!-- Web application development utilities applicable to both Servlet and 
          Portlet Environments (depends on spring-core, spring-beans, spring-context) 
          Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
          web framework with Spring (org.springframework.web.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
          spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
          Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc</artifactId>
          <version>${spring.version}</version>
      </dependency>
      
      <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
          spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
          Container (org.springframework.web.portlet.*) -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-webmvc-portlet</artifactId>
          <version>${spring.version}</version>
      </dependency>

      <!-- Support for testing Spring applications with tools such as JUnit and 
          TestNG This artifact is generally always defined with a 'test' scope for 
          the integration testing framework and unit testing stubs -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${spring.version}</version>
          <scope>test</scope>
      </dependency>
      
      <!-- Spring End -->
 

		<!-- Struts2 Begin -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-core</artifactId>
            <version>${struts2.version}</version>
            <!--
            	这里的 exclusions 是排除包，因为 Struts2中有javassist，Hibernate中也有javassist,
           		 所以如果要整合Hibernate，一定要排除掉Struts2中的javassist，否则就冲突了。
            <exclusions>
                <exclusion>
                    <groupId>javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions> 
            -->
        </dependency>
        
        <!-- convention-plugin插件，使用了这个插件之后，就可以采用注解的方式配置Action -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-convention-plugin</artifactId>
            <version>${struts2.version}</version>
        </dependency>
        
        <!--config-browser-plugin插件，使用了这个插件之后，就可以很方便的浏览项目中的所有action及其与 jsp view的映射 -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-config-browser-plugin</artifactId>
            <version>${struts2.version}</version>
        </dependency>
        
        <!-- Struts2和Spring整合插件 -->
        <dependency>
            <groupId>org.apache.struts</groupId>
            <artifactId>struts2-spring-plugin</artifactId>
            <version>${struts2.version}</version>
        </dependency>
        
        <!-- Struts2 End -->


		<!-- hibernate Begin -->
		
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        
        <!-- hibernate Begin -->


		<!-- mysql驱动包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.34</version>
		</dependency>
        
      <!-- 数据库连接池c3p0 -->
      <dependency>
          <groupId>c3p0</groupId>
          <artifactId>c3p0</artifactId>
          <version>0.9.1.2</version>
      </dependency>

		<!--aspectjweaver(Spring AOP需要，估计是配置hibernate声明式事务的时候需要AOP) -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.5</version>
        </dependency> 
        
        
        
                                    
  </dependencies>
    
  <build>
    <finalName>sshmv</finalName>
  </build>
</project>
